# Vuln ID: V-38438
# Severity: low
# Group Title: SRG-OS-000062
# Rule ID: SV-50238r4_rule
# STIG ID: RHEL-06-000525
# Rule Title: Auditing must be enabled at boot by setting a kernel parameter.
# Discussion: Each process on the system carries an "auditable" flag which indicates whether its activities can be audited. Although "auditd" takes care of enabling this for all processes which launch after it does, adding the kernel argument ensures it is set for every process during boot.
# IA Controls:
# Check Content: Inspect the kernel boot arguments (which follow the word "kernel") in "/boot/grub/grub.conf". If they include "audit=1", then auditing is enabled at boot time.
#
# If auditing is not enabled at boot time, this is a finding.
#
# If the system uses UEFI inspect the kernel boot arguments (which follow the word "kernel") in “/boot/efi/EFI/redhat/grub.conf”. If they include "audit=1", then auditing is enabled at boot time.
# Fix Text: To ensure all processes can be audited, even those which start prior to the audit daemon, add the argument "audit=1" to the kernel line in "/boot/grub/grub.conf" or “/boot/efi/EFI/redhat/grub.conf”, in the manner below:
#
# kernel /vmlinuz-version ro vga=ext root=/dev/VolGroup00/LogVol00 rhgb quiet audit=1
#
# UEFI systems may prepend "/boot" to the "/vmlinuz-version" argument.
# False Positives:
# False Negatives:
# Documentable: false
# Mitigations:
# Potential Impact:
# Third Party Tools:
# Mitigation Control:
# Responsibility:
# Severity Override Guidance:
# Check Content Reference: M
# Classification: Unclass
# STIG: Red Hat Enterprise Linux 6 Security Technical Implementation Guide :: Release: 18 Benchmark Date: 26 Jan 2018
# VMS Asset Posture:
#  CCI: CCI-000169
# The information system provides audit record generation capability for the auditable events defined in AU-2 a at organization-defined information system components.
# NIST SP 800-53 :: AU-12 a
# NIST SP 800-53A :: AU-12.1 (ii)
# NIST SP 800-53 Revision 4 :: AU-12 a
#
#
- name: check stig_rhel6_v1r18 v_38438
  set_fact:
    stig_rhel6_v1r18_results: "{{stig_rhel6_v1r18_results|combine({'v_38438': 'fail'})}}"
  when: '"v_38438" in stig_rhel6_v1r18_checks'


# Vuln ID: V-38596
# Severity: medium
# Group Title: SRG-OS-999999
# Rule ID: SV-50397r2_rule
# STIG ID: RHEL-06-000078
# Rule Title: The system must implement virtual address space randomization.
# Discussion: Address space layout randomization (ASLR) makes it more difficult for an attacker to predict the location of attack code he or she has introduced into a process's address space during an attempt at exploitation. Additionally, ASLR also makes it more difficult for an attacker to know the location of existing code in order to repurpose it using return oriented programming (ROP) techniques.
# IA Controls:
# Check Content: The status of the "kernel.randomize_va_space" kernel parameter can be queried by running the following commands:
#
# $ sysctl kernel.randomize_va_space
# $ grep kernel.randomize_va_space /etc/sysctl.conf
#
# The output of the command should indicate a value of at least "1" (preferably "2"). If this value is not the default value, investigate how it could have been adjusted at runtime, and verify it is not set improperly in "/etc/sysctl.conf".
# If the correct value is not returned, this is a finding.
# Fix Text: To set the runtime status of the "kernel.randomize_va_space" kernel parameter, run the following command:
#
# # sysctl -w kernel.randomize_va_space=2
#
# If this is not the system's default value, add the following line to "/etc/sysctl.conf":
#
# kernel.randomize_va_space = 2
# False Positives:
# False Negatives:
# Documentable: false
# Mitigations:
# Potential Impact:
# Third Party Tools:
# Mitigation Control:
# Responsibility:
# Severity Override Guidance:
# Check Content Reference: M
# Classification: Unclass
# STIG: Red Hat Enterprise Linux 6 Security Technical Implementation Guide :: Release: 18 Benchmark Date: 26 Jan 2018
# VMS Asset Posture:
#  CCI: CCI-000366
# The organization implements the security configuration settings.
# NIST SP 800-53 :: CM-6 b
# NIST SP 800-53A :: CM-6.1 (iv)
# NIST SP 800-53 Revision 4 :: CM-6 b
#
#
- name: check stig_rhel6_v1r18 v_38596
  set_fact:
    stig_rhel6_v1r18_results: "{{stig_rhel6_v1r18_results|combine({'v_38596': 'fail'})}}"
  when: '"v_38596" in stig_rhel6_v1r18_checks'


# Vuln ID: V-38597
# Severity: medium
# Group Title: SRG-OS-999999
# Rule ID: SV-50398r2_rule
# STIG ID: RHEL-06-000079
# Rule Title: The system must limit the ability of processes to have simultaneous write and execute access to memory.
# Discussion: ExecShield uses the segmentation feature on all x86 systems to prevent execution in memory higher than a certain address. It writes an address as a limit in the code segment descriptor, to control where code can be executed, on a per-process basis. When the kernel places a process's memory regions such as the stack and heap higher than this address, the hardware prevents execution in that address range.
# IA Controls:
# Check Content: The status of the "kernel.exec-shield" kernel parameter can be queried by running the following command:
#
# $ sysctl kernel.exec-shield
# $ grep kernel.exec-shield /etc/sysctl.conf
#
# The output of the command should indicate a value of "1". If this value is not the default value, investigate how it could have been adjusted at runtime, and verify it is not set improperly in "/etc/sysctl.conf".
# If the correct value is not returned, this is a finding.
# Fix Text: To set the runtime status of the "kernel.exec-shield" kernel parameter, run the following command:
#
# # sysctl -w kernel.exec-shield=1
#
# If this is not the system's default value, add the following line to "/etc/sysctl.conf":
#
# kernel.exec-shield = 1
# False Positives:
# False Negatives:
# Documentable: false
# Mitigations:
# Potential Impact:
# Third Party Tools:
# Mitigation Control:
# Responsibility:
# Severity Override Guidance:
# Check Content Reference: M
# Classification: Unclass
# STIG: Red Hat Enterprise Linux 6 Security Technical Implementation Guide :: Release: 18 Benchmark Date: 26 Jan 2018
# VMS Asset Posture:
#  CCI: CCI-000366
# The organization implements the security configuration settings.
# NIST SP 800-53 :: CM-6 b
# NIST SP 800-53A :: CM-6.1 (iv)
# NIST SP 800-53 Revision 4 :: CM-6 b
#
#
- name: check stig_rhel6_v1r18 v_38597
  set_fact:
    stig_rhel6_v1r18_results: "{{stig_rhel6_v1r18_results|combine({'v_38597': 'fail'})}}"
  when: '"v_38597" in stig_rhel6_v1r18_checks'


# Vuln ID: V-38675
# Severity: low
# Group Title: SRG-OS-999999
# Rule ID: SV-50476r2_rule
# STIG ID: RHEL-06-000308
# Rule Title: Process core dumps must be disabled unless needed.
# Discussion: A core dump includes a memory image taken at the time the operating system terminates an application. The memory image could contain sensitive data and is generally useful only for developers trying to debug problems.
# IA Controls:
# Check Content: To verify that core dumps are disabled for all users, run the following command:
#
# $ grep core /etc/security/limits.conf /etc/security/limits.d/*.conf
#
# The output should be:
#
# * hard core 0
#
# If it is not, this is a finding.
# Fix Text: To disable core dumps for all users, add the following line to "/etc/security/limits.conf":
#
# * hard core 0
# False Positives:
# False Negatives:
# Documentable: false
# Mitigations:
# Potential Impact:
# Third Party Tools:
# Mitigation Control:
# Responsibility:
# Severity Override Guidance:
# Check Content Reference: M
# Classification: Unclass
# STIG: Red Hat Enterprise Linux 6 Security Technical Implementation Guide :: Release: 18 Benchmark Date: 26 Jan 2018
# VMS Asset Posture:
#  CCI: CCI-000366
# The organization implements the security configuration settings.
# NIST SP 800-53 :: CM-6 b
# NIST SP 800-53A :: CM-6.1 (iv)
# NIST SP 800-53 Revision 4 :: CM-6 b
#
#
- name: check stig_rhel6_v1r18 v_38675
  set_fact:
    stig_rhel6_v1r18_results: "{{stig_rhel6_v1r18_results|combine({'v_38675': 'fail'})}}"
  when: '"v_38675" in stig_rhel6_v1r18_checks'
