# TODO: fstype replacement

# - name: verify packages
#   rpm_verify_all_dump:
#   register: rpm_verify_all_dump
#
# - name: collect modified packages
#   command: "rpm -qf {{item.path}}"
#   args:
#     warn: False
#   changed_when: False
#   loop: "{{rpm_verify_all_dump.rpm_verify_all}}"
#   register: fs_file_pkgs
#
# - name: combine pkg & verify
#   set_fact:
#     fs_pkg_V: "{{ fs_pkg_V | default([]) + [ { 'package': item.stdout, 'verify': item.item } ] }}"
#   when: not item is skipped
#   loop: "{{fs_file_pkgs.results}}"
#
# - name: collect package query dump
#   rpm_query_dump:
#       name: "{{item.package}}"
#       path: "{{item.verify.path}}"
#   loop: "{{fs_pkg_V}}"
#   register: rpm_query_dump
#
# - name: combine pkg, verify, query
#   set_fact:
#     fs_pkg_V_q: "{{ fs_pkg_V_q | default([]) + [ { 'package': item.item.package, 'verify': item.item.verify, 'query': item.rpm_query_dump[0] } ] }}"
#   loop: "{{rpm_query_dump.results}}"
#
# - name: collect file stat
#   stat:
#       checksum_algorithm: "{{rpm_checksum_algorithm}}"
#       path: "{{item.verify.path}}"
#   loop: "{{fs_pkg_V_q}}"
#   register: stat
#
# - name: combine pkg, verify, query, stat
#   set_fact:
#     fs_pkg_V_q_s: "{{ fs_pkg_V_q_s | default([]) + [ { 'package': item.item.package, 'verify': item.item.verify, 'query': item.item.query, 'stat': item.stat } ] }}"
#   loop: "{{stat.results}}"
#
# # Red Hat Enterprise Linux 7 Security Technical Implementation Guide :: Release: 4 Benchmark Date: 26 Jan 2018
# # V-71849 (SV-86473r2_rule)
# - name: reset file user permissions
#   file:
#       path: "{{item.verify.path}}"
#       mode: "{{item.query.mode_permissions}}"
#   loop: "{{fs_pkg_V_q_s}}"
#   when:
#       - item.verify.mode_differs
#       - item.stat.mode is more_permissive(item.query.mode_permissions)
#
# - name: reset file owner
#   file:
#       path: "{{item.verify.path}}"
#       owner: "{{item.query.owner}}"
#   loop: "{{fs_pkg_V_q_s}}"
#   when:
#       - item.verify.owner_differs
#       - item.stat.pw_name != item.query.owner
#
# - name: reset file group
#   file:
#       path: "{{item.verify.path}}"
#       group: "{{item.query.group}}"
#   loop: "{{fs_pkg_V_q_s}}"
#   when:
#       - item.verify.group_differs
#       - item.stat.gr_name != item.query.group
#
# # Red Hat Enterprise Linux 7 Security Technical Implementation Guide :: Release: 4 Benchmark Date: 26 Jan 2018
# # V-71855 (SV-86479r2_rule)
#
# # TODO add check for package in repo. if it doesn't exist this errors
# - name: reinstall for checksum mismatch
#   command: "yum reinstall -y {{item.package}}"
#   args:
#       warn: False
#   loop: "{{fs_pkg_V_q_s}}"
#   when:
#       - item.verify.digest_differs
#       - not item.verify.is_config
#       - not item.verify.is_ghost
#   register: fs_reinstall
#   failed_when: False
#   changed_when: fs_reinstall.rc == 0
#
# # Red Hat Enterprise Linux 7 Security Technical Implementation Guide :: Release: 4 Benchmark Date: 26 Jan 2018
# # V-72007 (SV-86631r2_rule)
# - name: collect unowned files
#   shell: find / -fstype xfs -nouser 2>/dev/null
#   register: fs_unowned
#   changed_when: False
#   failed_when: False
#
# - name: reset owner of unowned files
#   file:
#       path: "{{item}}"
#       owner: root
#   loop: "{{fs_unowned.stdout_lines}}"
#
# # Red Hat Enterprise Linux 7 Security Technical Implementation Guide :: Release: 4 Benchmark Date: 26 Jan 2018
# # V-72009 (SV-86633r2_rule)
# - name: collect group unowned files
#   shell: find / -fstype xfs -nogroup 2>/dev/null
#   register: fs_group_unowned
#   changed_when: False
#   failed_when: False
#
# - name: reset owner of group unowned files
#   file:
#       path: "{{item}}"
#       group: root
#   loop: "{{fs_group_unowned.stdout_lines}}"
#
# # Red Hat Enterprise Linux 7 Security Technical Implementation Guide :: Release: 4 Benchmark Date: 26 Jan 2018
# # V-72039 (SV-86663r1_rule)
# - name: collect unlabled devices
#   shell: find /dev \( -context *:device_t:* -o -context *:unlabeled_t:* \) \( -type c -o -type b \) -printf "%p %Z\n"
#   register: fs_unlabeled_devs
#   changed_when: False
#   failed_when: False
#
# # NOTE: the STIG says to reinstall packages containing /dev files, but they
# # aren't actually installed via a package, so we re-label instead
# - name: relabel /dev
#   command: "setfiles -v {{fs_file_contexts}} /dev"
#   when:
#       - fs_unlabeled_devs.stdout != ''
#   register: fs_relabel
#   changed_when: fs_relabel.stdout != ''
#
# # Red Hat Enterprise Linux 7 Security Technical Implementation Guide :: Release: 4 Benchmark Date: 26 Jan 2018
# # V-72047 (SV-86671r3_rule)
# - name: collect world writable dirs
#   command: find / -xdev -perm -002 -type d -fstype xfs
#   register: fs_world_writable
#   changed_when: False
#
# - name: collect stat of dirs
#   stat:
#       path: "{{item}}"
#   loop: "{{fs_world_writable.stdout_lines}}"
#   register: fs_ww_stat
#
# - name: reset owner if not in list
#   file:
#       path: "{{item.item}}"
#       owner: root
#   loop: "{{fs_ww_stat.results}}"
#   when: item.stat.pw_name not in fs_world_writable_users
#
# - name: reset group if not in list
#   file:
#       path: "{{item.item}}"
#       group: root
#   loop: "{{fs_ww_stat.results}}"
#   when: item.stat.gr_name not in fs_world_writable_groups
#
# # Red Hat Enterprise Linux 7 Security Technical Implementation Guide :: Release: 4 Benchmark Date: 26 Jan 2018
# # V-72065 (SV-86689r1_rule)
# - name: start, enable tmp.mount
#   service:
#       name: tmp.mount
#       enabled: yes
#       state: started
#
# # Red Hat Enterprise Linux 7 Security Technical Implementation Guide :: Release: 4 Benchmark Date: 26 Jan 2018
# # V-72277 (SV-86901r1_rule)
# - name: remove .shosts files
#   command: find / -name '*.shosts' -exec rm -vf {} ;
#   register: fs_shosts_rm
#   changed_when: fs_shosts_rm.stdout != ''

# Red Hat Enterprise Linux 7 Security Technical Implementation Guide :: Release: 4 Benchmark Date: 26 Jan 2018
# V-72279 (SV-86903r1_rule)
- name: remove shosts.equiv files
  command: find / -name shosts.equiv -exec rm -vf {} ;
  register: fs_shosts_equiv_rm
  changed_when: fs_shosts_equiv_rm.stdout != ''
