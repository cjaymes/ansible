- name: cat /etc/fstab
  shell: cat /etc/fstab || true
  # following is so we don't get an error about using command instead of module
  args:
      warn: false
  # errors are expected; ignore
  ignore_errors: yes
  # this command doesn't actually change anything
  changed_when: false
  register: fstab

- name: fstab
  debug:
    msg: '{{fstab}}'

- name: parse fstab
  set_fact:
      fstab: "{{ fstab.stdout | parse_cli_textfsm('textfsm_templates/etc/fstab')|list }}"

- name: add nosuid to /home
  include_tasks: fstab-opt-present.yml
  vars:
    point: /home
    opt: nosuid

- name: add nosuid to removable
  include_tasks: fstab-opt-present.yml
  vars:
    point: "{{item.mountpoint}}"
    opt: nosuid
  with_items: "{{fstab}}"
  when:
      - item.type in filesystems_types_removable

- name: add nosuid to network
  include_tasks: fstab-opt-present.yml
  vars:
    point: "{{item.mountpoint}}"
    opt: nosuid
  with_items: "{{fstab}}"
  when:
      - item.type in filesystems_types_network

# NOTE: can't fix separate filesystem for /home,/var,/var/log/audit,/tmp

- name: enable (and start) tmp.mount
  systemd:
      name: tmp.mount
      enabled: yes
      state: started

- name: add sec=krb5:krb5i:krb5p to nfs mounts
  include_tasks: fstab-opt-present.yml
  vars:
    point: "{{item.mountpoint}}"
    opt: sec=krb5:krb5i:krb5p
  with_items: "{{fstab}}"
  when:
      - item.type in ['nfs', 'nfs4']

- name: add noexec to network
  include_tasks: fstab-opt-present.yml
  vars:
    point: "{{item.mountpoint}}"
    opt: noexec
  with_items: "{{fstab}}"
  when:
      - item.type in filesystems_types_network
